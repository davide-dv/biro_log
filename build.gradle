plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    id 'org.springframework.cloud.contract' version '3.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'maven-publish'
}
configurations {
    asciidoctorExt
}

group = 'it.biro'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2021.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.cloud:spring-cloud-starter'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation 'org.springframework.cloud:spring-cloud-starter-contract-verifier:3.1.4'
    implementation 'com.vladmihalcea:hibernate-types-55:2.19.2'
    implementation group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.6.11.Final'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.0'
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.6.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'io.rest-assured:spring-web-test-client:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.0.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.0.3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2021.0.4"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact bootJar

            artifact verifierStubsJar

            versionMapping {
                usage("java-api") {
                    fromResolutionOf("runtimeClasspath")
                }
                usage("java-runtime") {
                    fromResolutionResult()
                }
            }
        }
    }
}

contracts {
    testMode = "EXPLICIT"
    baseClassForTests = 'it.biro.biro_log.BaseClass'
    testFramework = "JUNIT5"
}

contractTest {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "Results: (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            boolean skipTests = Boolean.parseBoolean(project.findProperty('SKIP_TESTS') ?: "false")
            if (result.testCount == 0 && !skipTests) {
                throw new IllegalStateException("No tests were found. Failing the build")
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

bootBuildImage {
    imageName='biro/log_app'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}